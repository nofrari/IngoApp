// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id      String     @id @unique @default(cuid())
  user_name    String
  user_sirname String
  email        String     @unique
  password     String
  pin          Int?
  accounts     Account[]
  categories   Category[]
  budgets      Budget[]
}

model Account {
  account_id      String        @id @unique @default(cuid())
  account_name    String
  account_balance Float
  user_id         String
  user            User          @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  transactions    Transaction[]
}

model Category {
  category_id   String        @id @unique @default(cuid())
  category_name String
  is_black      Boolean
  transactions  Transaction[]
  user_id       String
  user          User          @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  budgets       Budget[]
  icon_id       String
  color_id      String
  icon          Icon          @relation(fields: [icon_id], references: [icon_id], onDelete: Cascade)
  color         Color         @relation(fields: [color_id], references: [color_id], onDelete: Cascade)
}

model Type {
  type_id      String        @id @unique @default(cuid())
  type_name    String
  transactions Transaction[]
}

model Interval {
  interval_id   String        @id @unique @default(cuid())
  interval_name String
  transactions  Transaction[]
  budgets       Budget[]
}

model Transaction {
  transaction_id     String   @id @unique @default(cuid())
  transaction_name   String
  transaction_amount Float
  date               DateTime
  description        String?
  bill_url           String?
  category_id        String
  category           Category @relation(fields: [category_id], references: [category_id], onDelete: Cascade)
  type_id            String
  type               Type     @relation(fields: [type_id], references: [type_id], onDelete: Cascade)
  interval_id        String
  interval           Interval @relation(fields: [interval_id], references: [interval_id], onDelete: Cascade)
  account_id         String
  account            Account  @relation(fields: [account_id], references: [account_id], onDelete: Cascade)
}

model Budget {
  budget_id     String     @id @unique @default(cuid())
  budget_name   String
  budget_amount Float
  startdate     DateTime
  enddate       DateTime
  user_id       String
  user          User       @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  interval_id   String
  interval      Interval   @relation(fields: [interval_id], references: [interval_id], onDelete: Cascade)
  categories    Category[]
}

model Icon {
  icon_id   String     @id @unique @default(cuid())
  icon_name String
  category  Category[]
}

model Color {
  color_id   String     @id @unique @default(cuid())
  color_name String
  category  Category[]
}
